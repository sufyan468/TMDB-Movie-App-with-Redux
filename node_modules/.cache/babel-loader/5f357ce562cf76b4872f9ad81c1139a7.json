{"ast":null,"code":"import { GET_ALL_UPCOMMINGS, GET_ALL_UPCOMMINGS_SUCCESS, GET_ALL_UPCOMMINGS_FAILURE } from \"../actions/allActionsTypes\";\nconst initialState = {\n  upcoming: [],\n  error: \"\"\n};\nexport const UpcommingReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload,\n    error\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case GET_ALL_UPCOMMINGS:\n      return { ...state\n      };\n\n    case GET_ALL_UPCOMMINGS_SUCCESS:\n      return { ...state,\n        upcoming: payload\n      };\n\n    case GET_ALL_UPCOMMINGS_FAILURE:\n      return {\n        error: error\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n_c = UpcommingReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpcommingReducer\");","map":{"version":3,"sources":["/Users/mac/Desktop/TMDB-Movie-App-with-Redux/src/store/reducers/upcommingReducer.js"],"names":["GET_ALL_UPCOMMINGS","GET_ALL_UPCOMMINGS_SUCCESS","GET_ALL_UPCOMMINGS_FAILURE","initialState","upcoming","error","UpcommingReducer","state","type","payload"],"mappings":"AAAA,SACEA,kBADF,EAEEC,0BAFF,EAGEC,0BAHF,QAIO,4BAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;AAKA,OAAO,MAAMC,gBAAgB,GAAG,YAG3B;AAAA,MAFHC,KAEG,uEAFKJ,YAEL;AAAA,MADH;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBJ,IAAAA;AAAjB,GACG;;AACH,UAAQG,IAAR;AACE,SAAKR,kBAAL;AACE,aAAO,EACL,GAAGO;AADE,OAAP;;AAIF,SAAKN,0BAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELH,QAAAA,QAAQ,EAAEK;AAFL,OAAP;;AAIF,SAAKP,0BAAL;AACE,aAAO;AACLG,QAAAA,KAAK,EAAEA;AADF,OAAP;;AAGF;AACE,aAAO,EACL,GAAGE;AADE,OAAP;AAhBJ;AAoBD,CAxBM;KAAMD,gB","sourcesContent":["import {\n  GET_ALL_UPCOMMINGS,\n  GET_ALL_UPCOMMINGS_SUCCESS,\n  GET_ALL_UPCOMMINGS_FAILURE,\n} from \"../actions/allActionsTypes\";\n\nconst initialState = {\n  upcoming: [],\n  error: \"\",\n};\n\nexport const UpcommingReducer = (\n  state = initialState,\n  { type, payload, error }\n) => {\n  switch (type) {\n    case GET_ALL_UPCOMMINGS:\n      return {\n        ...state,\n      };\n\n    case GET_ALL_UPCOMMINGS_SUCCESS:\n      return {\n        ...state,\n        upcoming: payload,\n      };\n    case GET_ALL_UPCOMMINGS_FAILURE:\n      return {\n        error: error,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}