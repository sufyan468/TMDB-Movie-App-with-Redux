{"ast":null,"code":"import { getAllMoviesSuccess, getAllMoviesFailure } from \"../actions/allmovieAction\";\nimport { getAllUpCommingsSuccess, getAllUpCommingsFailure } from \"../actions/upcommingActions\";\nimport { getAllTrendingSuccess, getAllTrendingFailure } from \"../actions/trendingAction\";\nimport { getMovieDetailSuccess, getMovieDetailFailure } from \"../actions/MoviesDetailsActions\";\nimport { getMovieReviewSuccess, getMovieReviewFailure } from \"../actions/moviesReviewAction\";\nimport { takeEvery, put, call } from \"redux-saga/effects\";\nimport { getAllDiscovers, getAllUpcomingsUrl, getAllTrendingsUrl, getMovieDetailUrl, getMovieReview } from \"../services/api\";\nimport { GET_ALL_MOVIES, GET_ALL_UPCOMMINGS, GET_ALL_TRENDINGS, GET_MOVIE_DETAILS, GET_MOVIES_REVIEW } from \"../actions/allActionsTypes\";\n\nfunction* geturl() {\n  try {\n    const {\n      data\n    } = yield call(getAllDiscovers);\n\n    if (data.results) {\n      yield put(getAllMoviesSuccess(data.results));\n    }\n  } catch (error) {\n    yield put(getAllMoviesFailure(error));\n  }\n}\n\nexport function* GetallMoviesUrl() {\n  yield takeEvery(GET_ALL_MOVIES, geturl);\n} //\n//\n\n_c = GetallMoviesUrl;\n\nfunction* UpComUrl() {\n  try {\n    const {\n      data\n    } = yield call(getAllUpcomingsUrl);\n\n    if (data.results) {\n      yield put(getAllUpCommingsSuccess(data.results));\n    }\n  } catch (error) {\n    yield put(getAllUpCommingsFailure(error));\n  }\n}\n\n_c2 = UpComUrl;\nexport function* GetUpcommingsUrl() {\n  yield takeEvery(GET_ALL_UPCOMMINGS, UpComUrl);\n}\n_c3 = GetUpcommingsUrl;\n\nfunction* TrendingsUrl() {\n  try {\n    const {\n      data\n    } = yield call(getAllTrendingsUrl);\n\n    if (data.results) {\n      yield put(getAllTrendingSuccess(data.results));\n    }\n  } catch (error) {\n    yield put(getAllTrendingFailure(error));\n  }\n}\n\n_c4 = TrendingsUrl;\nexport function* GetTrendingsUrl() {\n  yield takeEvery(GET_ALL_TRENDINGS, TrendingsUrl);\n}\n_c5 = GetTrendingsUrl;\n\nfunction* movieDetail(_ref) {\n  let {\n    movieId\n  } = _ref;\n\n  try {\n    const {\n      data\n    } = yield call(getMovieDetailUrl, movieId);\n\n    if (data) {\n      yield put(getMovieDetailSuccess(data));\n    }\n  } catch (error) {\n    yield put(getMovieDetailFailure(error));\n  }\n}\n\nexport function* GetMovieDetails() {\n  yield takeEvery(GET_MOVIE_DETAILS, movieDetail);\n}\n_c6 = GetMovieDetails;\n\nfunction* movieReview(_ref2) {\n  let {\n    reviewId\n  } = _ref2;\n\n  try {\n    const {\n      data\n    } = yield call(getMovieReview, reviewId);\n\n    if (data) {\n      yield put(getMovieReviewSuccess(data));\n    }\n  } catch (error) {\n    yield put(getMovieReviewFailure(error));\n  }\n}\n\nexport function* GetMovieReviews() {\n  yield takeEvery(GET_MOVIES_REVIEW, movieReview);\n}\n_c7 = GetMovieReviews;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"GetallMoviesUrl\");\n$RefreshReg$(_c2, \"UpComUrl\");\n$RefreshReg$(_c3, \"GetUpcommingsUrl\");\n$RefreshReg$(_c4, \"TrendingsUrl\");\n$RefreshReg$(_c5, \"GetTrendingsUrl\");\n$RefreshReg$(_c6, \"GetMovieDetails\");\n$RefreshReg$(_c7, \"GetMovieReviews\");","map":{"version":3,"sources":["/Users/mac/Desktop/TMDB-Movie-App-with-Redux/src/store/sagas/allMoviesDiscoverSaga.js"],"names":["getAllMoviesSuccess","getAllMoviesFailure","getAllUpCommingsSuccess","getAllUpCommingsFailure","getAllTrendingSuccess","getAllTrendingFailure","getMovieDetailSuccess","getMovieDetailFailure","getMovieReviewSuccess","getMovieReviewFailure","takeEvery","put","call","getAllDiscovers","getAllUpcomingsUrl","getAllTrendingsUrl","getMovieDetailUrl","getMovieReview","GET_ALL_MOVIES","GET_ALL_UPCOMMINGS","GET_ALL_TRENDINGS","GET_MOVIE_DETAILS","GET_MOVIES_REVIEW","geturl","data","results","error","GetallMoviesUrl","UpComUrl","GetUpcommingsUrl","TrendingsUrl","GetTrendingsUrl","movieDetail","movieId","GetMovieDetails","movieReview","reviewId","GetMovieReviews"],"mappings":"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","sourcesContent":["import {\n  getAllMoviesSuccess,\n  getAllMoviesFailure,\n} from \"../actions/allmovieAction\";\nimport {\n  getAllUpCommingsSuccess,\n  getAllUpCommingsFailure,\n} from \"../actions/upcommingActions\";\nimport {\n  getAllTrendingSuccess,\n  getAllTrendingFailure,\n} from \"../actions/trendingAction\";\n\nimport {\n  getMovieDetailSuccess,\n  getMovieDetailFailure,\n} from \"../actions/MoviesDetailsActions\";\n\nimport {\n  getMovieReviewSuccess,\n  getMovieReviewFailure,\n} from \"../actions/moviesReviewAction\";\nimport { takeEvery, put, call } from \"redux-saga/effects\";\nimport {\n  getAllDiscovers,\n  getAllUpcomingsUrl,\n  getAllTrendingsUrl,\n  getMovieDetailUrl,\n  getMovieReview,\n} from \"../services/api\";\nimport {\n  GET_ALL_MOVIES,\n  GET_ALL_UPCOMMINGS,\n  GET_ALL_TRENDINGS,\n  GET_MOVIE_DETAILS,\n  GET_MOVIES_REVIEW,\n} from \"../actions/allActionsTypes\";\n\nfunction* geturl() {\n  try {\n    const { data } = yield call(getAllDiscovers);\n\n    if (data.results) {\n      yield put(getAllMoviesSuccess(data.results));\n    }\n  } catch (error) {\n    yield put(getAllMoviesFailure(error));\n  }\n}\n\nexport function* GetallMoviesUrl() {\n  yield takeEvery(GET_ALL_MOVIES, geturl);\n}\n//\n//\nfunction* UpComUrl() {\n  try {\n    const { data } = yield call(getAllUpcomingsUrl);\n\n    if (data.results) {\n      yield put(getAllUpCommingsSuccess(data.results));\n    }\n  } catch (error) {\n    yield put(getAllUpCommingsFailure(error));\n  }\n}\n\nexport function* GetUpcommingsUrl() {\n  yield takeEvery(GET_ALL_UPCOMMINGS, UpComUrl);\n}\n\nfunction* TrendingsUrl() {\n  try {\n    const { data } = yield call(getAllTrendingsUrl);\n\n    if (data.results) {\n      yield put(getAllTrendingSuccess(data.results));\n    }\n  } catch (error) {\n    yield put(getAllTrendingFailure(error));\n  }\n}\n\nexport function* GetTrendingsUrl() {\n  yield takeEvery(GET_ALL_TRENDINGS, TrendingsUrl);\n}\n\nfunction* movieDetail({ movieId }) {\n  try {\n    const { data } = yield call(getMovieDetailUrl, movieId);\n\n    if (data) {\n      yield put(getMovieDetailSuccess(data));\n    }\n  } catch (error) {\n    yield put(getMovieDetailFailure(error));\n  }\n}\n\nexport function* GetMovieDetails() {\n  yield takeEvery(GET_MOVIE_DETAILS, movieDetail);\n}\n\nfunction* movieReview({ reviewId }) {\n  try {\n    const { data } = yield call(getMovieReview, reviewId);\n\n    if (data) {\n      yield put(getMovieReviewSuccess(data));\n    }\n  } catch (error) {\n    yield put(getMovieReviewFailure(error));\n  }\n}\n\nexport function* GetMovieReviews() {\n  yield takeEvery(GET_MOVIES_REVIEW, movieReview);\n}\n"]},"metadata":{},"sourceType":"module"}