{"ast":null,"code":"import { SEARCH } from \"../actions/allActionsTypes\";\nimport { getSearchResult } from \"../services/api\";\nimport { getSearchSuccess, getSearchFailure } from \"../actions/searchAction\";\nimport { takeEvery, put, call } from \"redux-saga/effects\";\n\nfunction* searchUrl(_ref) {\n  let {\n    searchLeters\n  } = _ref;\n\n  try {\n    const {\n      data\n    } = yield call(getSearchResult, searchLeters);\n\n    if (data) {\n      yield put(getSearchSuccess(data));\n    }\n  } catch (error) {\n    yield put(getSearchFailure(error));\n  }\n}\n\nexport function* GetSearchUrl() {\n  yield takeEvery(SEARCH, searchUrl);\n}\n_c = GetSearchUrl;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetSearchUrl\");","map":{"version":3,"sources":["/Users/mac/Desktop/TMDB-Movie-App-with-Redux/src/store/sagas/serachSaga.js"],"names":["SEARCH","getSearchResult","getSearchSuccess","getSearchFailure","takeEvery","put","call","searchUrl","searchLeters","data","error","GetSearchUrl"],"mappings":"AAAA,SAASA,MAAT,QAAuB,4BAAvB;AAEA,SAASC,eAAT,QAAgC,iBAAhC;AAEA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,yBAAnD;AAEA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;;AAEA,UAAUC,SAAV,OAAsC;AAAA,MAAlB;AAAEC,IAAAA;AAAF,GAAkB;;AACpC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,IAAI,CAACL,eAAD,EAAkBO,YAAlB,CAA3B;;AAEA,QAAIC,IAAJ,EAAU;AACR,YAAMJ,GAAG,CAACH,gBAAgB,CAACO,IAAD,CAAjB,CAAT;AACD;AACF,GAND,CAME,OAAOC,KAAP,EAAc;AACd,UAAML,GAAG,CAACF,gBAAgB,CAACO,KAAD,CAAjB,CAAT;AACD;AACF;;AAED,OAAO,UAAUC,YAAV,GAAyB;AAC9B,QAAMP,SAAS,CAACJ,MAAD,EAASO,SAAT,CAAf;AACD;KAFgBI,Y","sourcesContent":["import { SEARCH } from \"../actions/allActionsTypes\";\n\nimport { getSearchResult } from \"../services/api\";\n\nimport { getSearchSuccess, getSearchFailure } from \"../actions/searchAction\";\n\nimport { takeEvery, put, call } from \"redux-saga/effects\";\n\nfunction* searchUrl({ searchLeters }) {\n  try {\n    const { data } = yield call(getSearchResult, searchLeters);\n\n    if (data) {\n      yield put(getSearchSuccess(data));\n    }\n  } catch (error) {\n    yield put(getSearchFailure(error));\n  }\n}\n\nexport function* GetSearchUrl() {\n  yield takeEvery(SEARCH, searchUrl);\n}\n"]},"metadata":{},"sourceType":"module"}